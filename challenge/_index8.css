body{
    width: 100%;
    height: 100vh;
    display: grid;
    grid-template-columns: 1.6fr 60px 1fr; 
    
}

.client {
    display: grid;
    grid-template-columns: 50px 5fr 1.5fr;
    border: 2px solid #ff0c00;
    /* background-color: #ff0c00; */
    background-color: #ff7400;
    gap:2px;
}

.client__btns{
    display: grid;
    grid-template-rows: repeat(2, 1fr);
    background-color: #ff7400;
    border: 2px solid #ff0c00;
}

.client__name{
    border: 2px solid #ff0c00;
}

.client__btn{
    place-self:center;
    border: 2px solid #ff0c00;
}

footer{
    display: flex;
    flex-direction: column;
    white-space: nowrap;
}

.nav{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}

.posts {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 15px;
}


/* body안에 있는 section, footer, aside에게 grid속성을 사용하기 위해 부모 요소인 body에게 display: grid를 정의해줍니다.
body에 grid-template-columns: 1.6fr 60px 1fr을 줘서 1.6fr, 60px, 1fr의 너비를 가진 3개의 열을 생성합니다.
section안에 있는 div.client에 grid-template-columns: 50px 5fr 1.5fr를 줘서 50px, 5fr, 1.5fr의 너비를 가진 3개의 열을 생성합니다.
div.client__btns에 grid-template-rows: repeat(2, 1fr)를 줘서 각각 동일한 높이를 가진 2개의 행을 생성합니다.
div.client__btn에 align-self와 justify-self의 축약형인 place-self: center를 사용해서 행과 열의 축을 기준으로 grid 아이템 내부에서 수평, 수직 정렬합니다.
footer에 display: flex, flex-direction: column을 사용해서 자식 요소들을 위에서 아래로 수직 정렬하고 white-space: nowrap을 사용해서 공백 처리를 줄 바꿈 없이 한 줄에 출력되도록 합니다.
div.nav에 grid-template-columns: repeat(3, 1fr)를 줘서 각각 동일한 너비를 가진 3개의 열을 생성하고 grid-gap: 20px을 사용해서 행과 열 사이의 간격을 20px로 지정합니다.
div.posts에 grid-template-columns: repeat(2, 1fr)를 줘서 각각 동일한 너비를 가진 2개의 열을 생성하고 gap: 15px을 사용해서 행과 열 사이의 간격을 15px로 지정합니다. */